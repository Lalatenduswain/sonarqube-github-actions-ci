name: SonarQube Scan

on:
  push:
    branches: [main, staging, develop]
  pull_request:
    branches: [main, staging, develop]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: self-hosted  # or use 'ubuntu-latest' for GitHub-hosted runners

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Ensure unzip is available
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Cache SonarScanner CLI
        id: cache-sonar
        uses: actions/cache@v3
        with:
          path: ./sonar-scanner
          key: sonar-scanner-cli-5.0.1.3006

      - name: Download SonarScanner CLI if not cached
        if: steps.cache-sonar.outputs.cache-hit != 'true'
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006.zip
          unzip sonar-scanner-cli-5.0.1.3006.zip
          mv sonar-scanner-5.0.1.3006 sonar-scanner

      - name: Add SonarScanner to PATH
        run: echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarScanner CLI
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=euml-vipasana \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -X
